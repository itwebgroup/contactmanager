{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","About","NotFound","Test","state","title","body","_this2","this","fetch","then","response","json","data","setState","_this$state","Component","Context","React","createContext","reducer","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","stop","children","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","fontSize","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iQAIMA,EAAS,SAAAC,GAAS,IACdC,EAAaD,EAAbC,SACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,gBACnBJ,GAEHC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,YACrBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,UAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAeH,UAAU,YAChCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,SAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,YAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADf,gBAWdN,EAAOU,aAAe,CACpBR,SAAU,UAOGF,QC1CAW,EAAA,WACb,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,yBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,iCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,mBCLSM,EAAA,WACb,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,OADF,mBAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,oCCqBSO,6MA1BbC,MAAQ,CACNC,MAAO,GACPC,KAAM,uFAEY,IAAAC,EAAAC,KAClBC,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OACRN,EAAKO,SAAS,CACZT,MAAOQ,EAAKR,MACZC,KAAMO,EAAKP,0CAKV,IAAAS,EACiBP,KAAKJ,MAArBC,EADDU,EACCV,MAAOC,EADRS,EACQT,KACf,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKU,GACLZ,EAAAC,EAAAC,cAAA,SAAIW,WArBOU,sECCbC,EAAUC,IAAMC,gBAEhBC,EAAU,SAAChB,EAAOiB,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFnB,EADL,CAEEqB,SAAUrB,EAAMqB,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFnB,EADL,CAEEqB,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBnB,EAAMqB,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFnB,EADL,CAEEqB,SAAUrB,EAAMqB,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOvB,IAIA6B,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAf,KAAAyB,GAAA,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAP,EAAAb,OAAAqB,EAAA,EAAArB,CAAAf,MAAA2B,EAAAZ,OAAAsB,EAAA,EAAAtB,CAAAU,IAAAa,KAAAC,MAAAZ,EAAA,CAAA3B,MAAAsB,OAAAW,MACErC,MAAQ,CACNqB,SAAU,GACVuB,SAAU,SAAA3B,GAAM,OAAIe,EAAKtB,SAAS,SAAAV,GAAK,OAAIgB,EAAQhB,EAAOiB,OAH9De,EAAA,OAAAb,OAAA0B,EAAA,EAAA1B,CAAAU,EAAAC,GAAAX,OAAA2B,EAAA,EAAA3B,CAAAU,EAAA,EAAAkB,IAAA,oBAAAC,MAAA,eAAAC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAAgC,EAAA7D,EAAA8D,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAA7D,EAAAiE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAOsBC,IAAMC,IAAI,8CAPhC,OAOUN,EAPVE,EAAAK,KASIzD,KAAKM,SAAS,CAAEW,SAAUiC,EAAI7C,OATlC,wBAAA+C,EAAAM,SAAAT,EAAAjD,SAAA,yBAAA6C,EAAAN,MAAAvC,KAAA+B,YAAA,KAAAY,IAAA,SAAAC,MAAA,WAaI,OACE3D,EAAAC,EAAAC,cAACsB,EAAQgB,SAAT,CAAkBmB,MAAO5C,KAAKJ,OAC3BI,KAAKjB,MAAM4E,cAfpBlC,EAAA,CAA8BjB,aAqBjBoD,EAAWnD,EAAQmD,SC6BjBC,6MA3EbjE,MAAQ,CACNkE,iBAAiB,KAGnBC,YAAc,WACZnC,EAAKtB,SAAS,CACZwD,iBAAkBlC,EAAKhC,MAAMkE,qBAIjCE,oDAAgB,SAAAf,EAAO7B,EAAIoB,GAAX,OAAAO,EAAA7D,EAAAiE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,IAAMU,OAAN,8CAAA3C,OAA2DF,IAFrD,OAGZoB,EAAS,CAAE1B,KAAM,iBAAkBO,QAASD,IAHhCgC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAKZZ,EAAS,CAAE1B,KAAM,iBAAkBO,QAASD,IALhC,wBAAAgC,EAAAM,SAAAT,EAAAjD,KAAA,4IASP,IAAAD,EAAAC,KAAAmE,EAC4BnE,KAAKjB,MAAMoC,QAAtCC,EADD+C,EACC/C,GAAIgD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBR,EAAoB9D,KAAKJ,MAAzBkE,gBAER,OACE7E,EAAAC,EAAAC,cAACyE,EAAD,KACG,SAAAhB,GAAS,IACAJ,EAAaI,EAAbJ,SACR,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACXgF,EAAM,IACPnF,EAAAC,EAAAC,cAAA,KACEoF,QAASxE,EAAKgE,YACd3E,UAAU,mBACVoF,MAAO,CAAEC,OAAQ,aAEnBxF,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVoF,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,MACPC,SAAU,IAEZL,QAASxE,EAAKiE,cAAca,KAAK9E,EAAMqB,EAAIoB,KAE7CvD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,gBAAA+B,OAAkBF,IACxBnC,EAAAC,EAAAC,cAAA,KACEC,UAAU,oBACVoF,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPI,YAAa,YAKpBhB,EACC7E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwCiF,GACxCpF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwCkF,IAExC,eA/DI9D,aCoBPuE,mLApBX,OACE9F,EAAAC,EAAAC,cAACyE,EAAD,KACG,SAAAhB,GAAS,IACA3B,EAAa2B,EAAb3B,SACR,OACEhC,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,SAAP,KACE/F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,WADF,SAGC6B,EAASO,IAAI,SAAAL,GAAO,OACnBlC,EAAAC,EAAAC,cAAC8F,EAAD,CAAStC,IAAKxB,EAAQC,GAAID,QAASA,gBAZ5BX,sCCDjB0E,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAhB,EAMIe,EANJf,KACAxB,EAKIuC,EALJvC,MACAyC,EAIIF,EAJJE,YACAvE,EAGIqE,EAHJrE,KACAwE,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOqG,QAASpB,GAAOgB,GACvBnG,EAAAC,EAAAC,cAAA,SACE2B,KAAMA,EACNsD,KAAMA,EACNhF,UAAWqG,IAAW,eAAgB,CACpCC,aAAcH,IAEhBF,YAAaA,EACbzC,MAAOA,EACP0C,SAAUA,IAEXC,GAAStG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBmG,KAenDL,EAAe1F,aAAe,CAC5BsB,KAAM,QAGOoE,QCiEAS,6MAxGb/F,MAAQ,CACNwE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,MAGVN,SAAW,SAAAO,GACTjE,EAAKtB,SAALS,OAAA+E,EAAA,EAAA/E,CAAA,GAAiB8E,EAAEE,OAAO3B,KAAOyB,EAAEE,OAAOnD,WAG5CoD,+CAAW,SAAA/C,EAAOT,EAAUqD,GAAjB,IAAAtF,EAAA6D,EAAAC,EAAAC,EAAA2B,EAAA/C,EAAA,OAAAH,EAAA7D,EAAAiE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTuC,EAAEK,iBADO3F,EAEsBqB,EAAKhC,MAA5BwE,EAFC7D,EAED6D,KAAMC,EAFL9D,EAEK8D,MAAOC,EAFZ/D,EAEY+D,MAGR,KAATF,EALK,CAAAhB,EAAAE,KAAA,eAMP1B,EAAKtB,SAAS,CAAEsF,OAAQ,CAAExB,KAAM,sBANzBhB,EAAA+C,OAAA,oBASK,KAAV9B,EATK,CAAAjB,EAAAE,KAAA,eAUP1B,EAAKtB,SAAS,CAAEsF,OAAQ,CAAEvB,MAAO,uBAV1BjB,EAAA+C,OAAA,oBAaK,KAAV7B,EAbK,CAAAlB,EAAAE,KAAA,gBAcP1B,EAAKtB,SAAS,CAAEsF,OAAQ,CAAEtB,MAAO,uBAd1BlB,EAAA+C,OAAA,yBAkBHF,EAAa,CACjB7B,OACAC,QACAC,SArBOlB,EAAAE,KAAA,GAwBSC,IAAM6C,KACtB,6CACAH,GA1BO,QAwBH/C,EAxBGE,EAAAK,KA6BTjB,EAAS,CAAE1B,KAAM,cAAeO,QAAS6B,EAAI7C,OAE7CuB,EAAKtB,SAAS,CACZ8D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,KAGVhE,EAAK7C,MAAMsH,QAAQC,KAAK,KAtCf,yBAAAlD,EAAAM,SAAAT,EAAAjD,yIAyCF,IAAAD,EAAAC,KAAAuG,EACgCvG,KAAKJ,MAApCwE,EADDmC,EACCnC,KAAMC,EADPkC,EACOlC,MAAOC,EADdiC,EACcjC,MAAOsB,EADrBW,EACqBX,OAE5B,OACE3G,EAAAC,EAAAC,cAACyE,EAAD,KACG,SAAAhB,GAAS,IACAJ,EAAaI,EAAbJ,SACR,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM6G,SAAUjG,EAAKiG,SAASnB,KAAK9E,EAAMyC,IACvCvD,EAAAC,EAAAC,cAACqH,EAAD,CACEpB,MAAM,OACNhB,KAAK,OACLiB,YAAY,gBACZzC,MAAOwB,EACPkB,SAAUvF,EAAKuF,SACfC,MAAOK,EAAOxB,OAEhBnF,EAAAC,EAAAC,cAACqH,EAAD,CACEpB,MAAM,QACNtE,KAAK,QACLsD,KAAK,QACLiB,YAAY,iBACZzC,MAAOyB,EACPiB,SAAUvF,EAAKuF,SACfC,MAAOK,EAAOvB,QAEhBpF,EAAAC,EAAAC,cAACqH,EAAD,CACEpB,MAAM,QACNhB,KAAK,QACLiB,YAAY,iBACZzC,MAAO0B,EACPgB,SAAUvF,EAAKuF,SACfC,MAAOK,EAAOtB,QAEhBrF,EAAAC,EAAAC,cAAA,SACEC,UAAU,4BACV0B,KAAK,SACL8B,MAAM,4BA7FDpC,aCwHViG,6MAvHb7G,MAAQ,CACNwE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,MAgBVN,SAAW,SAAAO,GACTjE,EAAKtB,SAALS,OAAA+E,EAAA,EAAA/E,CAAA,GAAiB8E,EAAEE,OAAO3B,KAAOyB,EAAEE,OAAOnD,WAG5CoD,+CAAW,SAAA/C,EAAOT,EAAUqD,GAAjB,IAAAtF,EAAA6D,EAAAC,EAAAC,EAAAoC,EAAAtF,EAAA8B,EAAA,OAAAH,EAAA7D,EAAAiE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTuC,EAAEK,iBADO3F,EAEsBqB,EAAKhC,MAA5BwE,EAFC7D,EAED6D,KAAMC,EAFL9D,EAEK8D,MAAOC,EAFZ/D,EAEY+D,MAGR,KAATF,EALK,CAAAhB,EAAAE,KAAA,eAMP1B,EAAKtB,SAAS,CAAEsF,OAAQ,CAAExB,KAAM,sBANzBhB,EAAA+C,OAAA,oBASK,KAAV9B,EATK,CAAAjB,EAAAE,KAAA,eAUP1B,EAAKtB,SAAS,CAAEsF,OAAQ,CAAEvB,MAAO,uBAV1BjB,EAAA+C,OAAA,oBAaK,KAAV7B,EAbK,CAAAlB,EAAAE,KAAA,gBAcP1B,EAAKtB,SAAS,CAAEsF,OAAQ,CAAEtB,MAAO,uBAd1BlB,EAAA+C,OAAA,yBAkBHO,EAAa,CACjBtC,OACAC,QACAC,SAGMlD,EAAOQ,EAAK7C,MAAM4H,MAAMC,OAAxBxF,GAxBCgC,EAAAE,KAAA,GA0BSC,IAAMsD,IAAN,8CAAAvF,OAC8BF,GAC9CsF,GA5BO,QA0BHxD,EA1BGE,EAAAK,KA+BTjB,EAAS,CAAE1B,KAAM,iBAAkBO,QAAS6B,EAAI7C,OAEhDuB,EAAKtB,SAAS,CACZ8D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,KAGVhE,EAAK7C,MAAMsH,QAAQC,KAAK,KAxCf,yBAAAlD,EAAAM,SAAAT,EAAAjD,6QAhBDoB,EAAOpB,KAAKjB,MAAM4H,MAAMC,OAAxBxF,YACUmC,IAAMC,IAAN,8CAAAlC,OAC8BF,WAD1C8B,SAGA/B,EAAU+B,EAAI7C,KAEpBL,KAAKM,SAAS,CACZ8D,KAAMjD,EAAQiD,KACdC,MAAOlD,EAAQkD,MACfC,MAAOnD,EAAQmD,2IAkDV,IAAAvE,EAAAC,KAAAuG,EACgCvG,KAAKJ,MAApCwE,EADDmC,EACCnC,KAAMC,EADPkC,EACOlC,MAAOC,EADdiC,EACcjC,MAAOsB,EADrBW,EACqBX,OAE5B,OACE3G,EAAAC,EAAAC,cAACyE,EAAD,KACG,SAAAhB,GAAS,IACAJ,EAAaI,EAAbJ,SACR,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM6G,SAAUjG,EAAKiG,SAASnB,KAAK9E,EAAMyC,IACvCvD,EAAAC,EAAAC,cAACqH,EAAD,CACEpB,MAAM,OACNhB,KAAK,OACLiB,YAAY,gBACZzC,MAAOwB,EACPkB,SAAUvF,EAAKuF,SACfC,MAAOK,EAAOxB,OAEhBnF,EAAAC,EAAAC,cAACqH,EAAD,CACEpB,MAAM,QACNtE,KAAK,QACLsD,KAAK,QACLiB,YAAY,iBACZzC,MAAOyB,EACPiB,SAAUvF,EAAKuF,SACfC,MAAOK,EAAOvB,QAEhBpF,EAAAC,EAAAC,cAACqH,EAAD,CACEpB,MAAM,QACNhB,KAAK,QACLiB,YAAY,iBACZzC,MAAO0B,EACPgB,SAAUvF,EAAKuF,SACfC,MAAOK,EAAOtB,QAEhBrF,EAAAC,EAAAC,cAAA,SACEC,UAAU,4BACV0B,KAAK,SACL8B,MAAM,+BA5GApC,aCmCXsG,gMAtBX,OACE7H,EAAAC,EAAAC,cAAC4H,EAAD,KACE9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACE/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8H,EAAD,CAAQjI,SAAS,oBACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACEjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvC,IACjC9F,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW3B,IAC5C1G,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWb,IACjDxH,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW7H,IACtCR,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAW3H,IACrCV,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAOG,UAAW5H,gBAdhBc,cCJE+G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASf,MACvB,2DCbNgB,IAASC,OAAO3I,EAAAC,EAAAC,cAAC0I,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhI,KAAK,SAAAiI,GACjCA,EAAaC","file":"static/js/main.a9c88102.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nimport { Consumer } from \"../../context\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = () => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4 className=\"mb-0\">\n                {name}{\" \"}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\",\n                    color: \"red\",\n                    fontSize: 28\n                  }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group mt-2\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\n\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    className=\"btn btn-success btn-block\"\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    className=\"btn btn-success btn-block\"\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}